/*
The ::before selector creates a pseudo-element
which is the first child of the selected element,
while the ::after selector creates a pseudo-element
which is the last child of the selected element.
These pseudo-elements are often used to create cosmetic content,
which you will see later in this project.
*/

*,
::before,
::after {
    box-sizing: inherit;
}
html {
    box-sizing: border-box;
}
#piano {
    background-color: #00471b;
    width: 992px;
    height: 290px;
    margin: 80px auto;
    padding: 90px 20px 0 20px;
    position: relative;
    border-radius: 10px;
}
.logo {
    width: 200px;
    position: absolute;
    top: 23px;
}

.keys {
    background-color: #040404;
    width: 949px;
    height: 180px;
    padding-left: 2px;
    overflow: hidden;
}
.key {
    background-color: #fff;
    position: relative;
    width: 41px;
    height: 175px;
    margin: 2px;
    float: left;
    border-radius: 0 0 3px 3px;
}

.key.black--key::after {
    background-color: #1d1e22;
    content: '';
    position: absolute;
    left: -18px;
    width: 32px;
    height: 100px;
    border-radius: 0 0 3px 3px;
}

/*
The @media at-rule, also known as a media query,
is used to conditionally apply CSS.
Media queries are commonly used to apply CSS
based on the viewport width using
the max-width and min-width properties.
*/
@media (max-width: 768px) {
    #piano {
        width: 358px;
    }
    .logo {
        width: 150px;
    }
    .keys {
        width: 318px;
    }
}

@media (min-width: 769px) and (max-width: 1199px) {
    #piano {
        width: 675px;
    }
    .keys {
        width: 633px;
    }
}
